@model Inspection.Web.Models.MainInwardModel
@using Inspection.Web.Service

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    int Count = 1;
}

@section styles{
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="~/Content/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="~/Content/assets/libs/prismjs/prism.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="~/Content/assets/js/pages/select2.init.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
    <script src="~/Content/assets/libs/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/Content/assets/js/pages/sweetalerts.init.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
}
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Sorting Form</h4>
            </div>
            @using (Html.BeginForm("AdSorting", "Sorting", FormMethod.Post, new { id = "inwardForm" }))
            {
                @Html.HiddenFor(model => model._INWARD.id)
                <div class="card-body">
                    <div class="live-preview">
                        <div class="row gy-4">
                            <div class="col-xxl-3 col-md-6">
                                <div>
                                    @Html.LabelFor(model => model._INWARD.InwardDate, new { @class = "form-label" })
                                    @Html.TextBoxFor(model => model._INWARD.InwardDate, new { @class = "form-control", type = "Date", id = "Inwarddate" })
                                </div>
                            </div>
                            <div class="col-xxl-3 col-md-6">
                                <div>
                                    @Html.LabelFor(model => model._INWARD.InwardTime, new { @class = "form-label" })
                                    @Html.TextBoxFor(model => model._INWARD.InwardTime, new { @class = "form-control", type = "time", id = "Inputdatetime" })
                                </div>
                            </div>
                            <div class="col-xxl-3 col-md-6">
                                <div>
                                    @Html.LabelFor(model => model._INWARD.JobNo, new { @class = "form-label" })
                                    @Html.TextBoxFor(model => model._INWARD.JobNo, new { @class = "form-control", id = "idjobnumber" })
                                </div>
                            </div>
                            <div class="col-xxl-3 col-md-6">
                                <div>
                                    @Html.LabelFor(model => model._INWARD.Partno, new { @class = "form-label" })
                                    @Html.TextBoxFor(model => model._INWARD.Partno, new { @class = "form-control", id = "idpartnumber", @readonly = "readonly" })
                                </div>
                            </div>
                            @{
                                var _DropDownListService = new Inspection.Web.Service.Maineservice();
                                var _TypeList = _DropDownListService.GetInspectiontype();
                            }
                            <div class="col-xxl-3 col-md-6">
                                <div>
                                    @Html.LabelFor(model => model._INWARD.Qty, new { @class = "form-label" })
                                    @Html.TextBoxFor(model => model._INWARD.Qty, new { @class = "form-control", id = "Inputqty" })
                                </div>
                            </div>

                            <div class="col-xxl-3 col-md-6">
                                <div>
                                    @Html.LabelFor(model => model._INWARD.ERev, new { @class = "form-label" })
                                    @Html.TextBoxFor(model => model._INWARD.ERev, new { @class = "form-control", id = "idrev", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="col-xxl-3 col-md-6">
                                <div>
                                    @Html.LabelFor(model => model._INWARD.ActualRev, new { @class = "form-label" })
                                    @Html.TextBoxFor(model => model._INWARD.ActualRev, new { @class = "form-control", id = "Inputact" })
                                </div>
                            </div>
                            <div class="col-xxl-3 col-md-6">
                                @{
                                    var staticData = new List<SelectListItem>
{
                                       new SelectListItem { Value = "Final", Text = "Final Inspection" },
                                       new SelectListItem { Value = "Humidity ", Text = "Humidity Inspection" },
                                       new SelectListItem { Value = "Thread ", Text = "Thread Inspection" },
                                       new SelectListItem { Value = "Visual ", Text = "Visual Inspection" }
                                  };

                                    var qualitystage = new List<SelectListItem>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 {
                                         new SelectListItem { Value = "N/A ", Text = "N/A" },
                                         new SelectListItem { Value = "AFTER PRIMARY PASSIVATION ", Text = "AFTER PRIMARY PASSIVATION" },
                                         new SelectListItem { Value = "AFTER CHROME,LM &amp; SECONDARY PASSIVATION  ", Text = "AFTER CHROME,LM &amp; SECONDARY PASSIVATION " },
                                         new SelectListItem { Value = "BEFORE ZINC PLATTING  ", Text = "BEFORE ZINC PLATTING " },
                                         new SelectListItem { Value = "AFTER LM &amp; SECONDARY PASSIVATION ", Text = "AFTER LM &amp; SECONDARY PASSIVATION " },
                                         new SelectListItem { Value = "BEFORE HT ", Text = "BEFORE HT" },
                                         new SelectListItem { Value = "AFTER BRUSHFINISH ", Text = "AFTER BRUSHFINISH" },
                                         new SelectListItem { Value = "AFTER EDM ", Text = "AFTER EDM" },
                                         new SelectListItem { Value = "AFTER GB ", Text = "AFTER GB " },
                                         new SelectListItem { Value = "AFTER HT ", Text = "AFTER HT" },
                                         new SelectListItem { Value = "AFTER GB &amp; BRUSHFINISH ", Text = "AFTER GB &amp; BRUSHFINISH" },
                                         new SelectListItem { Value = "BEFORE BLACKOXIDE ", Text = "BEFORE BLACKOXIDE" },
                                         new SelectListItem { Value = "AFTER ASSEMBLY ", Text = "AFTER ASSEMBLY" },
                                         new SelectListItem { Value = "BEFORE GB ", Text = "BEFORE GB" },
                                         new SelectListItem { Value = "BEFORE PASSIVATION ", Text = "BEFORE PASSIVATION" },
                                         new SelectListItem { Value = "AFTER BLACKOXIDE ", Text = "AFTER BLACKOXIDE" },
                                         new SelectListItem { Value = "BEFORE BRUSHFINISH ", Text = "BEFORE BRUSHFINISH" },
                                         new SelectListItem { Value = "AFTER SECONDARY PASSIVATION ", Text = "AFTER SECONDARY PASSIVATION" },
                                         new SelectListItem { Value = "AFTER CHROME ", Text = "AFTER CHROME" },
                                         new SelectListItem { Value = "AFTER ZINC PLATTING ", Text = "AFTER ZINC PLATTING" },
                                         new SelectListItem { Value = "BEFORE ASSEMBLY ", Text = "BEFORE ASSEMBLY" },
                                         new SelectListItem { Value = "AFTER ELECTROPOLISH ", Text = "AFTER ELECTROPOLISH" },
                                         new SelectListItem { Value = "AFTER ASSEMBLY &amp; LM ", Text = "AFTER ASSEMBLY &amp; LM" },
                                         new SelectListItem { Value = "PROTOTYPE ", Text = "PROTOTYPE" }
                                    };
                                    var notedata = new List<SelectListItem>
{
                                          new SelectListItem { Value = "100% Visual/Gauge Inspection ", Text = "100% Visual/Gauge Inspection" },
                                          new SelectListItem { Value = "Out source parts", Text = "Out source parts" },
                                          new SelectListItem { Value = "Unit price zero", Text = "Unit price zero" },
                                          new SelectListItem { Value = "Assembly part", Text = "Assembly part" },
                                          new SelectListItem { Value = "Forecast", Text = "Forecast" },
                                     };
                                }
                                @Html.LabelFor(model => model._INWARD.InspectionType, new { @class = "form-label" })
                                @Html.DropDownListFor(model => model._INWARD.InspectionType, staticData, new { @class = "form-select mb-3 js-example-basic-single", id = "Inputinstype" })
                            </div>
                            <div class="col-xxl-3 col-md-6">
                                @Html.LabelFor(model => model._INWARD.ProcessStage, new { @class = "form-label" })
                                @Html.DropDownListFor(model => model._INWARD.ProcessStage, _TypeList, new { @class = "form-select mb-3 js-example-basic-single", id = "Inputstage" })
                            </div>
                            <div class="col-xxl-3 col-md-6">

                                @Html.LabelFor(model => model._INWARD.QualityStage, new { @class = "form-label" })
                                @Html.DropDownListFor(model => model._INWARD.QualityStage, qualitystage, new { @class = "form-select mb-3 js-example-basic-single", id = "InputstageQuality" })
                            </div>
                            <div class="col-xxl-3 col-md-6">

                                @Html.LabelFor(model => model._INWARD.Note, new { @class = "form-label" })
                                @Html.DropDownListFor(model => model._INWARD.Note, notedata, new { @class = "form-select mb-3 js-example-basic-single", id = "Inputnote" })
                            </div>
                            <div class="col-xxl-3 col-md-6">
                                <button type="submit" class="btn btn-primary waves-effect waves-light" id="btninwrad" style="margin-top:28px;">Save</button>
                                <input type="hidden" id="hiddenidinward" />
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>







