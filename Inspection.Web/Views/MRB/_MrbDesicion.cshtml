@model Inspection.Web.Models.mrbmainmodel
@using Inspection.Web.Service
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .table table-bordered border-secondary table-nowrap align-middle mb-0 {
        border: none;
    }
</style>
@section styles{
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

    <!-- dropzone css -->
    <link rel="stylesheet" href="~/Content/assets/libs/dropzone/dropzone.css" type="text/css" />

    <!-- Sweet Alert css-->
    <link href="~/Content/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

}
@{
    int count = 1;
    var inspectionservice = new Inspection.Web.Scripts.Inspectionservice();
}
<style>
    .containersign {
        display: flex;
        justify-content: space-between;
    }

    .left-side {
        display: flex;
        flex-direction: column;
        padding-left: 20px;
    }

    .form-control.product-location.text-wrap {
        word-wrap: break-word;
    }

    hr {
        margin: 4px;
        color: inherit;
        border: 0;
        border-top: 1px solid;
        opacity: .25;
    }
</style>
<div class="col-xxl-3 md-6 mb-2">
    <button type="button" class="btn btn-success" id="generatePdfBtn">Generate PDF</button>
</div>
<div style="background-color:aliceblue">
    <div id="yourDivId">
        <div class="row">
            <div class="col-lg-12">
                <div class="card" style=" background-color:white">
                    <div class="card-header align-items-center d-flex">
                        <h4 class="card-title mb-0 flex-grow-1">MRb Ragister</h4>

                    </div>
                    @using (Html.BeginForm("AddDatetomrb", "MRB", FormMethod.Post))
                    {

                        @Html.HiddenFor(model => model._MrbModel.Id)

                        <div class="card-body" style=" background-color:white">
                            <div class="live-preview">
                                <div class="row gy-4">
                                    <div class="col-xxl-3 col-md-6">
                                        <div>
                                            <div>
                                                <label>Job No</label>
                                                @Html.TextBoxFor(model => model._MrbModel.jobno, new { @disabled = "disabled", @class = "aspNetDisabled form-control" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-xxl-3 col-md-6">
                                        <div>
                                            <label>Part No</label>
                                            @Html.TextBoxFor(model => model._MrbModel.partno, new { @disabled = "disabled", @class = "form-control", id = "exampleInputdate" })
                                        </div>
                                    </div>
                                    <div class="col-xxl-3 col-md-6">
                                        <div>
                                            <label>Qty</label>
                                            @Html.TextBoxFor(model => model._MrbModel.qty, new { @disabled = "disabled", @class = "form-control", id = "exampleInputdate" })
                                        </div>
                                    </div>
                                    <div class="col-xxl-3 col-md-6">
                                        <div>
                                            <label>Inspection Type</label>
                                            @Html.TextBoxFor(model => model._MrbModel.inspectiontype, new { @disabled = "disabled", @class = "form-control", id = "exampleInputdate" })
                                        </div>
                                    </div>
                                    @if (Model._MrbModel.MRbDate == null)
                                    {
                                        <div class="col-xxl-3 col-md-6">
                                            <div>
                                                <label>MRB Date</label>
                                                @Html.TextBoxFor(model => Model._MrbModel.MRbDate, new { @class = "form-control", id = "exampleInputdate", @type = "datetime-local", @required = "required" })
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-xxl-3 col-md-6">
                                            <div>
                                                <label>MRB Date</label>
                                                @Html.TextBoxFor(model => Model._MrbModel.MRbDate, new { @class = "form-control", id = "exampleInputdate" })
                                            </div>
                                        </div>
                                    }

                                    @if (Model._MrbModel.MRbDate == null)
                                    {
                                        <div class="col-xxl-3 col-md-6 mt-5">
                                            <div>
                                                <button type="submit" class="btn btn-primary">Save</button>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="card" style=" background-color:white">
            <div class="card-body p-4" style=" background-color:white">
                @using (Html.BeginForm("AddDesicion", "MRB", FormMethod.Post))
                {
                    @Html.HiddenFor(model => model._MrbModel.Id)
                    for (int i = 0; i < Model.mrbdecisioModel.Count; i++)
                    {
                        @Html.HiddenFor(model => model.mrbdecisioModel[i].Id)
                    }
                    <div class="table-responsive">
                        <table class="table table-bordered border-success align-middle table-nowrap mb-0">
                            <thead>
                                <tr>
                                    <th width="20px">Sr No</th>
                                    <th width="10px">Quantity</th>
                                    <th width="50px">RCode</th>
                                    <th scope="col" width="600px">Defect</th>
                                    <th scope="col" width="150px">Location</th>
                                    <th scope="col" width="100px">Sub Qty</th>
                                    <th scope="col" width="100px">MRB Decision</th>
                                    <th width="20px">Action</th>
                                </tr>
                            </thead>
                            <tbody id="">
                                @foreach (var item in Model.mrbdecisioModel)
                                {
                                    <tr id="1" class="">
                                        <th scope="row" class="product-id">@count</th>

                                        <td class="text-start">
                                            <div class="mb-2">
                                                <input type="text" class="form-control" value="@item.Qtys" name="Qty" id="productName-1" required disabled />
                                            </div>
                                        </td>
                                        <td>
                                            @{
                                                List<SelectListItem> desSelectList = inspectionservice.GetDescription();
                                                List<SelectListItem> rcodeSelectList = inspectionservice.GetRcodes();
                                               
                                            }
                                            @foreach (var rcods in item.Rcode)
                                            {
                                                @Html.TextBoxFor(model => rcods, new { @class = "form-control product-location", @name = "rcode", @id = "rcode" })
                                            }
                                        </td>
                                        <td>
                                            @foreach (var des in item.Description)
                                            {
                                                @Html.TextAreaFor(model => des, new { @class = "form-control product-defect text-wrap", @disabled = "disabled", @name = "desc", @id = "description", @rows = 2 })
                                            }
                                        </td>
                                        <td>
                                            @foreach (var ls in item.location)
                                            {
                                                @Html.TextBoxFor(model => ls, new { @class = "form-control product-location", @disabled = "disabled", @name = "location", @id = "productLocation-1" })

                                            }
                                        </td>
                                        <td>
                                            @foreach (var sqty in item.subqty)
                                            {
                                                @Html.TextBoxFor(model => sqty, new { @class = "form-control product-location", @disabled = "disabled", @name = "location", @id = "productLocation-1" })

                                            }
                                        </td>
                                        <td>
                                            @for (int i = 0; i < item.Reject.Count; i++)
                                            {
                                                if (item.Reject[i] != null)
                                                {
                                                    <label>Reject: @item.Reject[i]</label>
                                                }

                                                if (item.Accept[i] != null)
                                                {
                                                    <label>Accept: @item.Accept[i]</label>
                                                }

                                                if (item.Rework[i] != null)
                                                {
                                                    <label>Rework: @item.Rework[i]</label>
                                                }

                                                if (item.Sorting[i] != null)
                                                {
                                                    <label>Sorting: @item.Sorting[i]</label>
                                                }

                                                if (item.Resorting[i] != null)
                                                {
                                                    <label>Resorting: @item.Resorting[i]</label>
                                                }

                                                if (item.Deviation[i] != null)
                                                {
                                                    <label>Deviation: @item.Deviation[i]</label>
                                                }

                                                if (item.ReworkMRB[i] != null)
                                                {
                                                    <label>ReworkMRB: @item.ReworkMRB[i]</label>
                                                }

                                                if (item.ReMeasured[i] != null)
                                                {
                                                    <label>ReMeasured: @item.ReMeasured[i]</label>
                                                }

                                                if (item.Split[i] != null)
                                                {
                                                    <label>Split: @item.Split[i]</label>
                                                }

                                                if (item.Hold[i] != null)
                                                {
                                                    <label>Hold: @item.Hold[i]</label>
                                                }
                                                if (item.Reject[i] == null && item.Accept[i] == null && item.Rework[i] == null && item.Sorting[i] == null && item.Resorting[i] == null && item.Deviation[i] == null && item.ReworkMRB[i] == null && item.ReMeasured[i] == null && item.Split[i] == null && item.Hold[i] == null)
                                                {
                                                    <a class="btn btn-primary btn-sm mb-3" onclick="openModaldecision('@item.Qtys', @item.ids[i] ,'@Model._MrbModel.iId');">
                                                        Decision
                                                    </a>
                                                    <br />
                                                }
                                                <hr />
                                            }
                                        </td>
                                        <td>
                                            @foreach (var idsa in item.ids)
                                            {
                                                <button type="button" class="btn btn-success" onclick="Editmrb(@idsa,@Model._MrbModel.iId);">Edit</button>
                                                <button type="button" class="btn btn-danger" onclick="deletemrb(@idsa);">Delete</button>
                                                <hr />
                                            }

                                        </td>
                                    </tr>
                                    count++;
                                }
                            </tbody>
                        </table>
                        <div class="containersign mt-4">
                            <div class="right-side"><b>FCD-0345 Rev01.</b></div>
                            <div class="left-side" style="padding-right: 500px;">
                                <div><b>Production :</b></div>
                                <div> <b>Quality :</b></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xxl-3 md-6">
                    </div>
                    <div class="col-xxl-3 md-6">
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div id="modaldesicion">
    @if (Model._MrbModel != null)
    {
        @Html.Partial("_mrbdesiciondata", Model._MrbModel)
    }

</div>
<div id="modaleditmrb">
    @if (Model._MrbModel != null)
    {
        @Html.Partial("_EditMRBpopup", Model._MrbModel)
    }

</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js"></script>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js"></script>
    <script src="~/Content/assets/libs/prismjs/prism.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="~/Content/assets/js/pages/select2.init.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
    <script src="~/Content/assets/libs/dropzone/dropzone-min.js"></script>
    <script src="~/Content/assets/libs/cleave.js/cleave.min.js"></script>
    <script src="~/Content/assets/js/pages/invoicecreate.init.js"></script>
    <script src="~/Content/assets/libs/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/Content/assets/js/pages/sweetalerts.init.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
    <script src="~/Content/assets/libs/dropzone/dropzone-min.js"></script>
    <script src="~/Content/assets/libs/cleave.js/cleave.min.js"></script>
    <script src="~/Content/assets/js/pages/invoicecreate.init.js"></script>
    <script src="~/Content/assets/libs/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
}
@{
    int countw = Model.mrbdecisioModel.Count;
}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var textbox = document.getElementById("rcode");

        textbox.disabled = true;
    });
    $(document).ready(function () {
        debugger
        var count = 1;
        for (var i = 1; i <= count; i++) {
            var textbox = document.getElementById("");
            if (textbox) {
                textbox.disabled = true;
            }
        }
    });

    function openModaldecision(qty, id, iid) {
        debugger
        $.ajax({
            url: '/MRB/_AddDesicion',
            type: 'GET',
            data: { qty: qty, id: id, iid: iid },
            success: function (data) {
                debugger
                $('#modaldesicion').html(data);
                $('#mrbdesiciondata').modal('show');
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }

    function Editmrb(id , iid) {
        debugger
        $.ajax({
            url: '/MRB/_EditMRB',
            type: 'GET',
            data: { id: id , iid : iid},
            success: function (data) {
                debugger
                $('#modaleditmrb').html(data);
                $('#mrbdesiciondataedit').modal('show');
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }

    function deletemrb(id, iid) {
        console.log('Editmrb function called with id:', id, 'and iid:', iid);
        debugger
        $.ajax({
            url: '/MRB/_DeleteMRb',
            type: 'GET',
            data: { id: id },
            success: function (data) {
                Swal.fire({
                    html: '<div class="mt-3">' +
                        '<lord-icon src="https://cdn.lordicon.com/lupuorrc.json" trigger="loop" colors="primary:#0ab39c,secondary:#405189" style="width:120px;height:120px"></lord-icon>' +
                        '<div class="mt-4 pt-2 fs-15">' +
                        '<h4>Well done !</h4>' +
                        '<p class="text-muted mx-4 mb-0">' + "Mrb Data Deleted Successfully." + '</p>' +
                        '</div>' +
                        '</div>',
                    showCancelButton: true,
                    showConfirmButton: false,
                    cancelButtonClass: 'btn btn-primary w-xs mb-1',
                    cancelButtonText: 'Back',
                    buttonsStyling: false,
                    showCloseButton: true
                });
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }

</script>

<script>
    document.getElementById('generatePdfBtn').addEventListener('click', function () {
        var content = document.getElementById('yourDivId');

        var pdfName = 'MRB Register';

        var options = {
            margin: 0,
            filename: pdfName,
            image: { type: 'jpeg', quality: 0.98 },
            html2canvas: { scale: 2 },
            jsPDF: { format: 'a4', orientation: 'landscape' },
        };



        html2pdf().from(content).set(options).save();
    });
</script>

<script>
    function testinmrb() {
        debugger
        var formData = $("form").serialize();
        console.log(formData);
        $.ajax({
            type: "POST",
            url: "@Url.Action("AddDesicion", "MRB")",
            data: formData,
            success: function (response) {
                Swal.fire({
                    html: '<div class="mt-3">' +
                        '<lord-icon src="https://cdn.lordicon.com/lupuorrc.json" trigger="loop" colors="primary:#0ab39c,secondary:#405189" style="width:120px;height:120px"></lord-icon>' +
                        '<div class="mt-4 pt-2 fs-15">' +
                        '<h4>Well done !</h4>' +
                        '<p class="text-muted mx-4 mb-0">' + "Mrb Decision Adedd Successfully." + '</p>' +
                        '</div>' +
                        '</div>',
                    showCancelButton: true,
                    showConfirmButton: false,
                    cancelButtonClass: 'btn btn-primary w-xs mb-1',
                    cancelButtonText: 'Back',
                    buttonsStyling: false,
                    showCloseButton: true
                });

            },
            error: function (error) {
                console.log(error);
            }
        });
    }
</script>
