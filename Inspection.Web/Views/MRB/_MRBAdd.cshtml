@model Inspection.Web.Models.mrbmainmodel
@using Inspection.Web.Service
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/Content/assets/libs/dropzone/dropzone.css" type="text/css" />
    <link href="~/Content/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />
    <style>
        .loader-container {
            display: none; /* Initially hide loader */
            position: fixed;
            z-index: 9999; /* Ensure loader is on top of other content */
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.7); /* Semi-transparent background */
            text-align: center;
        }

        .loader {
            border: 6px solid #f3f3f3; /* Light grey border */
            border-top: 6px solid #3498db; /* Blue top border */
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite; /* Spin animation */
            margin: auto;
        }
    </style>
}
<div id="loader" class="loader-container">
    <img src="~/img/Animationgif.gif"/>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">MRb Ragister</h4>
                <div class="flex-shrink-0">
                </div>
            </div>
            <div class="card-body">
                <div class="live-preview">
                    <div class="row gy-4">
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <div>
                                    <label>Job No</label>
                                    @Html.TextBoxFor(model => model._MrbModel.jobno, new { @disabled = "disabled", @class = "aspNetDisabled form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label>Part No</label>
                                @Html.TextBoxFor(model => model._MrbModel.partno, new { @disabled = "disabled", @class = "form-control", id = "exampleInputdate" })
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label>Inward Qty</label>
                                @Html.TextBoxFor(model => model._MrbModel.qty, new { @disabled = "disabled", @class = "form-control", id = "inwardqty" })
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label>Sample Qty</label>
                                @Html.TextBoxFor(model => model._MrbModel.Sampleqty, new { @disabled = "disabled", @class = "form-control", id = "" })
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label>Note</label>
                                @Html.TextBoxFor(model => model._MrbModel.note, new { @disabled = "disabled", @class = "form-control", id = "exampleInputqty" })
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label>Inspection Type</label>
                                @Html.TextBoxFor(model => model._MrbModel.inspectiontype, new { @disabled = "disabled", @class = "form-control", id = "exampleInputdate" })
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label>Quality stage</label>
                                @Html.TextAreaFor(model => model._MrbModel.Qualitystage, new { @disabled = "disabled", @class = "form-control", id = "exampleInputdate" })
                            </div>
                        </div>
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label>Mrb Date</label>
                                @Html.TextAreaFor(model => model._MrbModel.MRbDate, new { @disabled = "disabled", @class = "form-control", id = "exampleInputdate" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@{
    var inspectionservice = new Inspection.Web.Scripts.Inspectionservice();
    var rcodeSelectList = inspectionservice.GetRcodes();
    var descriptionSelectList = inspectionservice.GetDescription();
    int count = 1;
}
@if (Model.mrbdecisioModel != null && Model.mrbdecisioModel.Count != 0)
{
    <div class="card" style=" background-color:white">
        <div class="card-body p-4" style=" background-color:white">
            @using (Html.BeginForm("AddDesicion", "MRB", FormMethod.Post))
            {
                @Html.HiddenFor(model => model._MrbModel.Id)
                for (int i = 0; i < Model.mrbdecisioModel.Count; i++)
                {
                    @Html.HiddenFor(model => model.mrbdecisioModel[i].Id)
                }
                <div class="table-responsive">
                    <table class="table table-bordered border-success align-middle table-nowrap mb-0">
                        <thead>
                            <tr>
                                <th width="20px">Sr No</th>
                                <th width="10px">Quantity</th>
                                <th width="50px">RCode</th>
                                <th scope="col" width="600px">Defect</th>
                                <th scope="col" width="150px">Location</th>
                                <th scope="col" width="100px">Sub Qty</th>
                                <th width="20px">Action</th>
                            </tr>
                        </thead>
                        <tbody id="">
                            @foreach (var item in Model.mrbdecisioModel)
                            {
                                <tr id="1" class="">
                                    <th scope="row" class="product-id">@count</th>

                                    <td class="text-start">
                                        <div class="mb-2">
                                            <input type="text" class="form-control" value="@item.Qtys" name="Qty" id="productName-1" required disabled />
                                        </div>
                                    </td>
                                    <td>
                                        @{
                                            List<SelectListItem> desSelectList = inspectionservice.GetDescription();

                                        }
                                        @foreach (var rcods in item.Rcode)
                                        {
                                            @Html.TextBoxFor(model => rcods, new { @class = "form-control product-location", @name = "rcode", @id = "rcode" })
                                        }
                                    </td>
                                    <td>
                                        @foreach (var des in item.Description)
                                        {
                                            @Html.TextAreaFor(model => des, new { @class = "form-control product-defect text-wrap", @disabled = "disabled", @name = "desc", @id = "description", @rows = 2 })
                                        }
                                    </td>
                                    <td>
                                        @foreach (var ls in item.location)
                                        {
                                            @Html.TextBoxFor(model => ls, new { @class = "form-control product-location", @disabled = "disabled", @name = "location", @id = "productLocation-1" })

                                        }
                                    </td>
                                    <td>
                                        @foreach (var sqty in item.subqty)
                                        {
                                            @Html.TextBoxFor(model => sqty, new { @class = "form-control product-location", @disabled = "disabled", @name = "location", @id = "productLocation-1" })

                                        }
                                    </td>
                                    <td>
                                        @foreach (var idsa in item.ids)
                                        {
                                            <button type="button" class="btn btn-success" onclick="Editmrbform(@idsa,@Model._MrbModel.iId);">Edit</button>
                                            <button type="button" class="btn btn-danger" onclick="deletemrbform(@idsa);">Delete</button>
                                            <hr />
                                        }
                                    </td>
                                </tr>
                                count++;
                            }
                        </tbody>
                    </table>
                </div>
                <div class="col-xxl-3 md-6">
                </div>
                <div class="col-xxl-3 md-6">
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="card">
        <div class="card-body p-4">
            <div class="d-flex align-items-center mb-4">
                <h5 class="card-title flex-grow-1 mb-0"></h5>

            </div>
            @using (Html.BeginForm("AddMrbdata", "MRB", FormMethod.Post))
            {
                @Html.HiddenFor(model => model._MrbModel.jobno)
                @Html.HiddenFor(model => model._MrbModel.partno)
                @Html.HiddenFor(model => model._MrbModel.Id)
                @Html.HiddenFor(model => model._MrbModel.Qualitystage)
                int counts = 1;
                <div class="table-responsive">
                    <table class="table table-bordered align-middle table-nowrap mb-0" id="myTable">
                        <thead class="align-middle">
                            <tr class="table-active">
                                <th scope="col">Sr No</th>
                                <th scope="col">Quantity</th>
                                <th scope="col">RCode</th>
                                <th scope="col">Defect</th>
                                <th scope="col">Location</th>
                                <th scope="col">SubQuantity</th>
                                <th scope="col"></th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody id="newlink">
                            <tr id="1" class="product">
                                <th scope="row" class="product-id">1</th>

                                <td class="text-start" style="vertical-align:top">
                                    <div class="mb-2">
                                        <input type="text" class="form-control" name="Qty" id="productName-1" required />
                                    </div>
                                </td>
                                <td>
                                    <select class="form-control product-price" name="Rcode" id="productRate-1" onchange="updateDefectOptions(this.value, @counts)">
                                        @foreach (var rcode in rcodeSelectList)
                                        {
                                            <option value="@rcode.Text">@rcode.Text</option>
                                        }
                                    </select>
                                </td>
                                <td>
                                    <select class="form-control product-quantity" name="Defect" id="productQty-1">
                                        <option value="Dimensional rejection in outer diameter">Dimensional rejection in outer diameter</option>
                                        <option></option>

                                    </select>
                                </td>
                                <td>
                                    <input type="text" class="form-control product-location" name="location" id="productLocation-1" />
                                </td>
                                <td>
                                    <input type="text" class="form-control product-subqty" name="subqty" id="productSubqty-1" />
                                </td>

                                <td class="" style="vertical-align:top">
                                    <a href="javascript:void(0)" name="plusbtn" id="plusbtn-1" onclick="addSubRow('productRate-1', 'productQty-1', 'productLocation-1', 'productSubqty-1','plusbtn-1' )" class="btn btn-success"><i class="ri-add-fill me-1 align-bottom"></i></a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div id="newForm" style="display: none;"></div>
                    <div class="mt-4">
                        <div colspan="9">
                            <a href="javascript:new_link()" id="add-item" class="btn btn-soft-secondary fw-medium"><i class="ri-add-fill me-1 align-bottom"></i> Add Item</a>
                        </div>
                    </div>
                </div>
                <div class="col-xxl-3 md-6">
                </div>
                <div class="col-xxl-3 md-6">
                </div>
                <div class="col-xxl-3 md-6">
                    <button type="button" class="btn btn-primary waves-effect waves-light" onclick="test()">save</button>
                </div>

            }
        </div>
    </div>
}
<div id="modaleditmrb">
    @if (Model._MrbModel != null)
    {
        @Html.Partial("_EditMRBpopup", Model._MrbModel)
    }
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Content/assets/libs/prismjs/prism.js"></script>

    <script src="~/Content/assets/js/app.js"></script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="~/Content/assets/js/pages/select2.init.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
    <script src="~/Content/assets/libs/dropzone/dropzone-min.js"></script>
    <script src="~/Content/assets/libs/cleave.js/cleave.min.js"></script>
    <script src="~/Content/assets/js/pages/invoicecreate.init.js"></script>
    <script src="~/Content/assets/libs/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/Content/assets/js/pages/sweetalerts.init.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
    <script src="~/Content/assets/libs/dropzone/dropzone-min.js"></script>
    <script src="~/Content/assets/libs/cleave.js/cleave.min.js"></script>
    <script src="~/Content/assets/js/pages/invoicecreate.init.js"></script>
    <script src="~/Content/assets/libs/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
}
<script>

    function updateDefectOptions(selectedValue, count) {
        debugger

        var defectDropdown = $('#productQty-' + count);


        defectDropdown.empty();


        $.ajax({
            url: "@Url.Action("GetDescription", "MRB")",
            method: 'GET',
            data: { Rcode: selectedValue },
            success: function (data) {
                defectDropdown.append($('<option>', {
                    value: data,
                    text: data
                }));

            },
            error: function (error) {
                console.error('Error fetching data:', error);

            }
        });
    }
     function updateDefectOptionsinside(selectedValue, count) {
         debugger
         count != "undifine" ? count : 1;
         var defectDropdowninside = $('#insidedes-' + count);


         defectDropdowninside.empty();
         $.ajax({
             url: "@Url.Action("GetDescription", "MRB")",
             method: 'GET',
             data: { Rcode: selectedValue },
             success: function (data) {
                 defectDropdowninside.append($('<option>', {
                     value: data,
                     text: data
                 }));unn
             },
             error: function (error) {
                 console.error('Error fetching data:', error);
             }
         });
     }
</script>
<script>

        function showLoader() {
            $('#loader').fadeIn();
        }

        // Function to hide loader
        function hideLoader() {
            $('#loader').fadeOut();
        }

    function test() {

        var table = document.getElementById("myTable");
        var qty = document.getElementById("exampleInputqty").value;
        qty = document.getElementById("inwardqty").value;

        var quantities = [];
        let sum = 0;

        for (var i = 1; i < table.rows.length; i++) {
            var input = table.rows[i].querySelector('input[name="Qty"]');
            quantities.push(parseFloat(input.value) || 0);
        }
        quantities.forEach(num => {
            sum += num;
        })
        console.log(quantities);
        if (qty >= sum) {

             // Gather form data
             var formData = $("form").serialize();
             console.log(formData);

             // Parse the serialized form data into an object
             var formDataObject = {};
             formData.split("&").forEach(function (pair) {
                 var keyValue = pair.split("=");
                 formDataObject[keyValue[0]] = decodeURIComponent(keyValue[1] || "");
             });

             // Create the desired object structure
             var resultObject = {
                 Qty: formDataObject["Qty"],
                 Rcode: formDataObject["Rcode"],
                 Location: formDataObject["location"]
             };

             console.log(resultObject);
             console.log(formData);
            // AJAX request to submit form data
            showLoader();
             $.ajax({
                 type: "POST",
                 url: "@Url.Action("_AddMrbdatanew", "MRB")",
                 data: formData,
                 success: function (response) {
                     hideLoader();
                     Swal.fire({
                         html: '<div class="mt-3">' +
                             '<lord-icon src="https://cdn.lordicon.com/lupuorrc.json" trigger="loop" colors="primary:#0ab39c,secondary:#405189" style="width:120px;height:120px"></lord-icon>' +
                             '<div class="mt-4 pt-2 fs-15">' +
                             '<h4>Well done !</h4>' +
                             '<p class="text-muted mx-4 mb-0">' + "Mrb Ragiter Addedd Successfully" + '</p>' +
                             '</div>' +
                             '</div>',
                         showCancelButton: true,
                         showConfirmButton: false,
                         cancelButtonClass: 'btn btn-primary w-xs mb-1',
                         cancelButtonText: 'Back',
                         buttonsStyling: false,
                         showCloseButton: true,

                     }).then((result) => {
                         debugger
                            if (result.dismiss === Swal.DismissReason.cancel) {
                                window.location.href = "@Url.Action("Index", "MRB")";
                            }
                        });
                    },
                 error: function (error) {
                     console.log(error);
                     hideLoader();
                 }
             });

             window.location.href = "@Url.Action("Index", "MRB")";
        }
        else {
            alert("Please enter Valid Qty.")
        }
    }

    function Editmrbform(id, iid) {
        debugger
        $.ajax({
            url: '/MRB/_EditMRBform',
            type: 'GET',
            data: { id: id, iid: iid },
            success: function (data) {
                debugger
                $('#modaleditmrb').html(data);
                $('#mrbdesiciondataedit').modal('show');
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }

    function deletemrbform(id, iid) {
        console.log('Editmrb function called with id:', id, 'and iid:', iid);
        debugger
        $.ajax({
            url: '/MRB/_DeleteMRbform',
            type: 'GET',
            data: { id: id },
            success: function (data) {
                Swal.fire({
                    html: '<div class="mt-3">' +
                        '<lord-icon src="https://cdn.lordicon.com/lupuorrc.json" trigger="loop" colors="primary:#0ab39c,secondary:#405189" style="width:120px;height:120px"></lord-icon>' +
                        '<div class="mt-4 pt-2 fs-15">' +
                        '<h4>Well done !</h4>' +
                        '<p class="text-muted mx-4 mb-0">' + "Mrb Data Deleted Successfully." + '</p>' +
                        '</div>' +
                        '</div>',
                    showCancelButton: true,
                    showConfirmButton: false,
                    cancelButtonClass: 'btn btn-primary w-xs mb-1',
                    cancelButtonText: 'Back',
                    buttonsStyling: false,
                    showCloseButton: true
                });
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }
</script>