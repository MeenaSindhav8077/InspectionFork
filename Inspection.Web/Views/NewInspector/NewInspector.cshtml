@model Inspection.Web.Models.NewInspectorViewModel
@{
    ViewBag.Title = "New Inspector";
}
@section styles{
    <link href="~/Content/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />

}
<h2>Add New Inspector</h2>

<div class="row justify-content-center">
    <div class="col-xxl-12">
        @using (Html.BeginForm("NewInspector", "NewInspector", FormMethod.Post, new { id = "myForm", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()

            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-xxl-2 col-md-3 mb-3">
                            @Html.LabelFor(model => model.NewInspector.FirstName, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.NewInspector.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewInspector.FirstName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xxl-2 col-md-3 mb-3">
                            @Html.LabelFor(model => model.NewInspector.LastName, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.NewInspector.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewInspector.LastName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xxl-2 col-md-3 mb-3">
                            @Html.Label("Employee Id", new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.NewInspector.UserID, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewInspector.UserID, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xxl-2 col-md-3 mb-3">
                            @Html.LabelFor(model => model.NewInspector.Password, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.NewInspector.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewInspector.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xxl-2 col-md-3 mb-3">
                            @Html.LabelFor(model => model.NewInspector.Department, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.NewInspector.Department, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewInspector.Department, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xxl-2 col-md-3 align-self-end mb-3">
                            @if (Model.Status == "edit")
                            {
                                <button type="submit" formaction="@Url.Action("EditInspector", "NewInspector")" class="btn btn-warning w-100" i>Update</button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-primary w-100">Add Inspector</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }

        <!-- Inspectors Table -->
        <div class="mt-5">
            <h3>Inspectors List</h3>
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <td>Sr No</td>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Employee Id</th>
                        <th>Department</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Inspectors != null)
                    {
                        var srNo = 1;
                        foreach (var inspector in Model.Inspectors)
                        {
                            <tr>
                                <td>@srNo</td>
                                <td>@inspector.FirstName</td>
                                <td>@inspector.LastName</td>
                                <td>@inspector.UserID</td>
                                <td>@inspector.Department</td>
                                <td>
                                    <a href="@Url.Action("NewInspector", "NewInspector", new { id = inspector.UserID })" class="btn btn-sm btn-warning">Edit</a>
                                    @using (Html.BeginForm("DeleteInspector", "NewInspector", FormMethod.Post, new { id = "deleteForm-" + inspector.UserID, style = "display:inline;" }))

                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.Hidden("userId", inspector.UserID)


                                        <button type="submit" class="btn btn-sm btn-danger" onclick="confirmDelete(event,  @inspector.UserID)">Delete</button>
                                    }
                                </td>
                            </tr>
                            srNo++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center">No inspectors found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="~/Content/assets/libs/prismjs/prism.js"></script>

    <script src="~/Content/assets/js/app.js"></script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="~/Content/assets/js/pages/select2.init.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
    <script src="~/Content/assets/libs/dropzone/dropzone-min.js"></script>
    <script src="~/Content/assets/libs/cleave.js/cleave.min.js"></script>
    <script src="~/Content/assets/js/pages/invoicecreate.init.js"></script>
    <script src="~/Content/assets/libs/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/Content/assets/js/pages/sweetalerts.init.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
    <script src="~/Content/assets/libs/dropzone/dropzone-min.js"></script>
    <script src="~/Content/assets/libs/cleave.js/cleave.min.js"></script>
    <script src="~/Content/assets/js/pages/invoicecreate.init.js"></script>
    <script src="~/Content/assets/libs/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/Content/assets/js/app.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>



    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    // Confirm before deleting
        function confirmDelete(event, UserID) {
    event.preventDefault(); // Stop the form from submitting immediately

    Swal.fire({
        title: 'Are you sure?',
        text: "Do you really want to delete this inspector?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            document.getElementById('deleteForm-' + UserID).submit();
        }
    });

    }

    // Display success or error message from TempData
    $(document).ready(function () {
        var successMessage = '@TempData["SuccessMessage"]';
        var errorMessage = '@TempData["ErrorMessage"]';

        if (successMessage) {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: successMessage,
                confirmButtonColor: '#3085d6'
            });
        } else if (errorMessage) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: errorMessage,
                confirmButtonColor: '#d33'
            });
        }
    });
    </script>


}

